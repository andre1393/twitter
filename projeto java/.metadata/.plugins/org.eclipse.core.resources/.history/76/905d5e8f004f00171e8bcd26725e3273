import java.util.ArrayList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.LinkedBlockingQueue;

import twitter4j.conf.ConfigurationBuilder;
import twitter4j.*;

/**
 * 
 * @author André Oliveira da Silva
 * classe principal do projeto (e unica)
 */
public class Main {

	private static String[] keyWords;
	
	/**
	 * 
	 * @param args - parametros de linha de comando
	 */
	public static void main(String args[])
	{
		if(args.length > 0)
		{
			// TODO - IMPLEMENTAR CHAMADA PELO COMANDO
		}else{
			List<String> list = new ArrayList<String>();
			list.add("#brasil");
			list.add("#brazil");
			list.add("#brasil2017");
			list.add("#brazil2017");
			list.add("#carnaval");
			list.add("#tourism");
			list.add("#bahia");
			list.add("#riodejaneiro");
			list.add("#saopaulo");
			
			keyWords = list.toArray();
		}
		// parametros de configuração da autenticação
		ConfigurationBuilder cb = new ConfigurationBuilder();
		cb.setDebugEnabled(true)
		.setOAuthConsumerKey("mh9Xu2es833iwrPe2zKSclA0t")
		.setOAuthConsumerSecret("XQMxg6osgdAQWtlPU1ipsi0FBPl7YLHl9PtJOpnyJG2YWwA3ps")
		.setOAuthAccessToken("873392543953715202-Q3rhLtTWfkTZQgCmYATPPqJOwvafvrS")
		.setOAuthAccessTokenSecret("nH6yxkAuT9puFEzikWs6GOCUxxuEbFQwjQHz3qbihQ28B");
		
		
		// objeto twitterStream que faz a conexão stream com twitter
		TwitterStream twitterStream = new TwitterStreamFactory(cb.build()).getInstance();
		
		// listener para a mudança de status
		StatusListener listener = new StatusListener() {

            @Override
            public void onException(Exception arg0) {
                // TODO Auto-generated method stub

            }

            @Override
            public void onDeletionNotice(StatusDeletionNotice arg0) {
                // TODO Auto-generated method stub

            }

            @Override
            public void onScrubGeo(long arg0, long arg1) {
                // TODO Auto-generated method stub

            }

            @Override
            public void onStatus(Status status) {
            	User user = status.getUser();
                /*
                // gets Username
                String username = status.getUser().getScreenName();
                System.out.println("@" + username);
                //String profileLocation = user.getLocation();
                //System.out.println(profileLocation);
                long tweetId = status.getId(); 
                System.out.println(tweetId);
                String content = status.getText();
                System.out.println(content +"\n");
                */
            	
        		ConfigurationBuilder cb_ = new ConfigurationBuilder();
        		cb_.setDebugEnabled(true)
        		.setOAuthConsumerKey("mh9Xu2es833iwrPe2zKSclA0t")
        		.setOAuthConsumerSecret("XQMxg6osgdAQWtlPU1ipsi0FBPl7YLHl9PtJOpnyJG2YWwA3ps")
        		.setOAuthAccessToken("873392543953715202-Q3rhLtTWfkTZQgCmYATPPqJOwvafvrS")
        		.setOAuthAccessTokenSecret("nH6yxkAuT9puFEzikWs6GOCUxxuEbFQwjQHz3qbihQ28B");
            	
                Twitter twitter2 = new TwitterFactory(cb_.build()).getInstance();
                try {
                    Query query2 = new Query("#brasil");
                    QueryResult result2 = twitter2.search(query2);
                    List<Status> tweets = result2.getTweets();
                    for (Status tweet : tweets) {
                    	
                        System.out.println("@" + tweet.getUser().getScreenName() + " - " + tweet.getText());
                    }
                } catch (TwitterException te) {
                    te.printStackTrace();
                    System.out.println("Failed to search tweets: " + te.getMessage());
                }

            }

            @Override
            public void onTrackLimitationNotice(int arg0) {
                // TODO Auto-generated method stub

            }

			@Override
			public void onStallWarning(StallWarning arg0) {
				// TODO Auto-generated method stub
				
			}

        };
        
        
        FilterQuery fq = new FilterQuery();

        fq.track(keyWords);

        twitterStream.addListener(listener);
        twitterStream.filter(fq); 
        
		/*
		Twitter twitter = new TwitterFactory(cb.build()).getInstance();
		Query query = new Query("#brasil");
		//query.setCount(100);
		
		try {
		    QueryResult result = twitter.search(query);
		    List<Status> tweets = result.getTweets();

		    for (int i = 0; i < tweets.size(); i++) {
		      Status t = (Status) tweets.get(i);

		      GeoLocation loc = t.getGeoLocation();

		      if (loc!=null) {
		        tweets.get(i++);

		        String user = t.getUser().getScreenName();
		        String msg = t.getText();

		        Double lat = t.getGeoLocation().getLatitude();
		        Double lon = t.getGeoLocation().getLongitude();

		        System.out.println("@" + user + " - " + msg);

		      }
		    }
		  }

		  catch (TwitterException te) {
		    System.out.println("Couldn't connect: " + te);
		  };*/
	}
}
