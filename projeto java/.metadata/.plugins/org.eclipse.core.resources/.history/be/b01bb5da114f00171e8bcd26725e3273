import java.util.ArrayList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.LinkedBlockingQueue;

import twitter4j.conf.ConfigurationBuilder;
import twitter4j.*;

/**
 * classe principal do projeto
 * @author André Oliveira da Silva
 */
public class Main {

	private static String[] keyWords;/// contém as #tags que serão pesquisadas
	private static String[] params = {"-user: ", "-text: ", "-id: "};
	
	/**
	 * 
	 * @param args - parametros de linha de comando
	 */
	public static void main(String args[])
	{
		String[] tokens = {"mh9Xu2es833iwrPe2zKSclA0t", 
				           "XQMxg6osgdAQWtlPU1ipsi0FBPl7YLHl9PtJOpnyJG2YWwA3ps",
				           "873392543953715202-Q3rhLtTWfkTZQgCmYATPPqJOwvafvrS",
				           "nH6yxkAuT9puFEzikWs6GOCUxxuEbFQwjQHz3qbihQ28B"};
		TwitterAPI twitterAPI = new TwitterAPI(tokens[0], tokens[1], tokens[2], tokens[3],
											   keyWords, params);	
		List<String> list = new ArrayList<String>();/// lista que contem as keyWords
		// os parametros passados para atribuir aos keyWords
		if(args.length > 0)
		{
			for(int i = 0; i < args.length; i++)
			{
				list.add(args[i]);
			}
			keyWords = new String[list.size()];
			keyWords = list.toArray(keyWords);			
		}else{// se nao tiver nenhum parametro, mantem as chaves padrão.
			list.add("#brasil");
			list.add("#brazil");
			list.add("#brasil2017");
			list.add("#brazil2017");
			list.add("#carnaval");
			list.add("#tourism");
			list.add("#bahia");
			list.add("#riodejaneiro");
			list.add("#saopaulo");
			
			keyWords = new String[list.size()];
			keyWords = list.toArray(keyWords);
		}
		

		/////////////////////
        // Busca por stream
        ////////////////////
        
		// parametros de configuração da autenticação
		ConfigurationBuilder cb = new ConfigurationBuilder();
		cb.setDebugEnabled(true)
		.setOAuthConsumerKey("mh9Xu2es833iwrPe2zKSclA0t")
		.setOAuthConsumerSecret("XQMxg6osgdAQWtlPU1ipsi0FBPl7YLHl9PtJOpnyJG2YWwA3ps")
		.setOAuthAccessToken("873392543953715202-Q3rhLtTWfkTZQgCmYATPPqJOwvafvrS")
		.setOAuthAccessTokenSecret("nH6yxkAuT9puFEzikWs6GOCUxxuEbFQwjQHz3qbihQ28B");
		
		
		// objeto twitterStream que faz a conexão stream com twitter
		TwitterStream twitterStream = new TwitterStreamFactory(cb.build()).getInstance();
		
		// listener para a mudança de status
		StatusListener listener = new StatusListener() {

            @Override
            public void onException(Exception arg0) {
                // TODO Auto-generated method stub

            }

            @Override
            public void onDeletionNotice(StatusDeletionNotice arg0) {
                // TODO Auto-generated method stub

            }

            @Override
            public void onScrubGeo(long arg0, long arg1) {
                // TODO Auto-generated method stub

            }

            @Override
            public void onStatus(Status status) {
            	User user = status.getUser();
                
                // gets Username
                String username = status.getUser().getScreenName();
                System.out.println("@" + username);
                //String profileLocation = user.getLocation();
                //System.out.println(profileLocation);
                long tweetId = status.getId(); 
                System.out.println(tweetId);
                String content = status.getText();
                System.out.println(content +"\n");
            }

            @Override
            public void onTrackLimitationNotice(int arg0) {
                // TODO Auto-generated method stub

            }

			@Override
			public void onStallWarning(StallWarning arg0) {
				// TODO Auto-generated method stub
				
			}

        };
        
        
        FilterQuery fq = new FilterQuery();

        fq.track(keyWords);

        twitterStream.addListener(listener);
        twitterStream.filter(fq); 
        
		/*
		Twitter twitter = new TwitterFactory(cb.build()).getInstance();
		Query query = new Query("#brasil");
		//query.setCount(100);
		
		try {
		    QueryResult result = twitter.search(query);
		    List<Status> tweets = result.getTweets();

		    for (int i = 0; i < tweets.size(); i++) {
		      Status t = (Status) tweets.get(i);

		      GeoLocation loc = t.getGeoLocation();

		      if (loc!=null) {
		        tweets.get(i++);

		        String user = t.getUser().getScreenName();
		        String msg = t.getText();

		        Double lat = t.getGeoLocation().getLatitude();
		        Double lon = t.getGeoLocation().getLongitude();

		        System.out.println("@" + user + " - " + msg);

		      }
		    }
		  }

		  catch (TwitterException te) {
		    System.out.println("Couldn't connect: " + te);
		  };*/
	}
}
